---
layout: post
title:  并发编程基本概念
date:   2019-03-30 23:52:12 +08:00
category: 并发编程
tags: 并发编程
comments: true
---

* content
{:toc}

多线程是互联网开发中重要的技术点，由于平时使用少，需要重点加强！






## 多线程的发展历史

什么情况下应该使用多线程

线程出现的目的是什么？解决进程中多任务的实时性问题？

其实简单来说，也就是解决“阻塞”的问题，阻塞的意思就是程序运行到某个函数或过程后等待某些事件发生而暂时停止 CPU 占用的情况，也就是说会使得 CPU 闲置。还有一些场景就是比如对于一个函数中的运算逻辑的性能问题，我们可以通过多线程的技术，使得一个函数中的多个逻辑运算通过多线程技术达到一个并行执行，从而提升性能

所以，多线程最终解决的就是“等待”的问题，所以简单总结的使用场景

1 通过并行计算提高程序执行性能

2 需要等待网络、 I/O 响应导致耗费大量的执行时间，可以采用异步线程的方式来减少阻塞

tomcat7 以前的 io 模型

多线程的应用场景

1 客户端阻塞 如果客户端只有一个线程，这个线程发起读取文件的操作必须等待IO 流返回，线程（客户端）才能做其他的事

2 线程级别阻塞 BIO 客户端一个线程情况下，一个线程导致整个客户端阻塞。那么我们可以使用多线程，一部分线程在等待 IO 操作返回其他线程可以继续做其他的事。此时从客户端角度来说，客户端没有闲着。

待续。。。
