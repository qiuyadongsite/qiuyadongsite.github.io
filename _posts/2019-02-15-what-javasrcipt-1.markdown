---
layout: post
title:  JavaScirpt学习笔记一
date:   2019-02-15 22:25:12 +08:00
category: 前端学习
tags: JavaScript
comments: true
---

* content
{:toc}

JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。








# <script>元素

- <script>定义了下列 6 个属性:

defer：可选。表示脚本可以延迟到文档完全被解析和显示之后再执行。只对外部脚本文件有效。IE7 及更早版本对嵌入脚本也支持这个属性。

async：可选。表示应该立即下载脚本，但不应妨碍页面中的其他操作，比如下载其他资源或等待加载其他脚本。只对外部脚本文件有效。<script type="text/javascript" async src="example1.js"></script> 。但与 defer不同的是，标记为 async 的脚本并不保证按照指定它们的先后顺序执行。

charset：可选。很少有人用。

language：已废弃。

src：可选。表示包含要执行代码的外部文件。

type：可选。不过，这个属性并不是必需的，如果没有指定这个属性，则其默认值仍为
text/javascript。

- 注意事项

无论如何包含代码，只要不存在 defer 和 async 属性，浏览器都会按照<script>元素在页面中出现的先后顺序对它们依次进行解析。换句话说，在第一个<script>元素包含的代码解析完成后，第二个<script>包含的代码才会被解析，然后才是第三个、第四个……

现代 Web 应用程序一般都把全部 JavaScript 引用放在<body>元素中页面内容的后面。

- 在XHTML中的用法

这里比较语句 a < b 中的小于号（<）在 XHTML 中将被当作开始一个新标签来解析。

解决方案：

1 用相应的 HTML 实体（&lt;）替换代码中所有的小于号（<）；

2 在 XHTML（XML）中，CData 片段是文档中的一个特殊区域，这个区域中可以包含不需要解析的任意格式的文本内容；

```
<![CDATA[
 ...
]]>

```
- 嵌入代码与外部文件

最好的做法还是尽可能使用外部文件来包含 JavaScript 代码;

可维护性
可缓存
适应未来

- 小结
把 JavaScript 插入到 HTML 页面中要使用<script>元素。使用这个元素可以把 JavaScript 嵌入到HTML 页面中，让脚本与标记混合在一起；也可以包含外部的 JavaScript 文件。而我们需要注意的地方有:

 在包含外部 JavaScript 文件时，必须将 src 属性设置为指向相应文件的 URL。而这个文件既可以是与包含它的页面位于同一个服务器上的文件，也可以是其他任何域中的文件。

 所有<script>元素都会按照它们在页面中出现的先后顺序依次被解析。在不使用 defer 和async 属性的情况下，只有在解析完前面<script>元素中的代码之后，才会开始解析后面<script>元素中的代码。

 由于浏览器会先解析完不使用 defer 属性的<script>元素中的代码，然后再解析后面的内容，所以一般应该把<script>元素放在页面最后，即主要内容后面，</body>标签前面。

 使用 defer 属性可以让脚本在文档完全呈现之后再执行。延迟脚本总是按照指定它们的顺序执行。

 使用 async 属性可以表示当前脚本不必等待其他脚本，也不必阻塞文档呈现。不能保证异步脚本按照它们在页面中出现的顺序执行。

另外，使用<noscript>元素可以指定在不支持脚本的浏览器中显示的替代内容。但在启用了脚本的情况下，浏览器不会显示<noscript>元素中的任何内容。
