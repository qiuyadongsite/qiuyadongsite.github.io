<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on 窗外蟋蟀博客</title>
    <link>https://keysaim.github.io/tags/docker/</link>
    <description>Recent content in Docker on 窗外蟋蟀博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 23 Jun 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://keysaim.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>用docker搭建全栈式应用（三）管理篇</title>
      <link>https://keysaim.github.io/post/docker/2016-06-23-full-stack-demo3/</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://keysaim.github.io/post/docker/2016-06-23-full-stack-demo3/</guid>
      <description>用docker搭建全栈式应用 (三）—— 管理篇 简介 在上一篇我们讲述了如何基于Dockerfile实现docker image的自动构建，并基于此</description>
    </item>
    
    <item>
      <title>用docker搭建全栈式应用 (二）构建篇</title>
      <link>https://keysaim.github.io/post/docker/2016-05-30-full-stack-demo2/</link>
      <pubDate>Mon, 30 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://keysaim.github.io/post/docker/2016-05-30-full-stack-demo2/</guid>
      <description>用docker搭建全栈式应用 (二）—— 构建篇 简介 在上一篇中, 我们已经较为详细的描述如何基于docker，搭建一套全栈式应用。web端采用Dj</description>
    </item>
    
    <item>
      <title>用docker搭建全栈式应用（一）基础篇</title>
      <link>https://keysaim.github.io/post/docker/2016-05-16-full-stack-demo/</link>
      <pubDate>Mon, 16 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://keysaim.github.io/post/docker/2016-05-16-full-stack-demo/</guid>
      <description>用docker搭建全栈式应用 简介 本文将以docker为基础，搭建一套简单的应用案例。该案例的应用架构将采用redis的master-slav</description>
    </item>
    
  </channel>
</rss>